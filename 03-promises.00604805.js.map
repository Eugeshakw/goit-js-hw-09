{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAUjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACWC,KAAKC,SAAW,GAEhCJ,EAAQ,C,SAACF,E,MAAUJ,IAGnBO,EAAO,C,SAACH,E,MAAUJ,GAAO,GAG5BA,EAAM,G,CAMbJ,EAAKC,KAAKc,iBAAiB,UAG3B,SAAoBC,GAClBA,EAAEC,iBAGF,IAAIC,EAAQC,OAAOnB,EAAKI,MAAMgB,OAC9B,MAAMf,EAAOc,OAAOnB,EAAKK,KAAKe,OACxBd,EAASa,OAAOnB,EAAKM,OAAOc,OAElC,IAAK,IAAIC,EAAI,EAAGA,EAAIf,EAAQe,GAAK,EAAG,CAGhCd,EAFec,EAESH,GAC3BI,MAAK,EAACd,SAAEA,EAAQJ,MAAEA,MACjBmB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAqBjB,QAAiBJ,OAC5DsB,QAAMC,IAAI,uBAAqBnB,QAAiBJ,MAAU,IAE7DwB,OAAM,EAACpB,SAAEA,EAAQJ,MAAEA,MAClBmB,EAAAzB,GAAS0B,OAAOK,QAAQ,sBAAoBrB,QAAiBJ,OAC3DsB,QAAMC,IAAI,sBAAoBnB,QAAeJ,MAAU,IAEvDc,GAASb,C,CAGbW,EAAEc,OAAOC,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  \n}\n\n// console.log(refs.form,refs.delay,refs.step,refs.amount);\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n          \n        } else {\n          reject({position, delay});\n          \n        }\n    }, delay)\n  })\n   \n}\n\n\nrefs.form.addEventListener('submit', submitForm);\n\n\nfunction submitForm(e) {\n  e.preventDefault();\n  \n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n      let position = i\n\n      createPromise(position, delay)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n      delay += step\n  }\n  \n  e.target.reset();\n\n}\n\n\n\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refs","form","document","querySelector","delay","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","delay1","Number","value","i","then","$parcel$interopDefault","Notify","success","console","log","catch","failure","target","reset"],"version":3,"file":"03-promises.00604805.js.map"}