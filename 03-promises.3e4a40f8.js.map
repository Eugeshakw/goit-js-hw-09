{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAO,CACXC,KAAMC,SAASC,cAAc,SAC7BC,MAAOF,SAASC,cAAc,uBAC9BE,KAAMH,SAASC,cAAc,sBAC7BG,OAAQJ,SAASC,cAAc,yBAUjC,SAASI,EAAcC,EAAUJ,GAC/B,OAAO,IAAIK,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACWC,KAAKC,SAAW,GAEhCJ,EAAQ,CAACF,WAAUJ,UAGnBO,EAAO,CAACH,WAAUJ,S,GAGrBA,E,IAMPJ,EAAKC,KAAKc,iBAAiB,UAG3B,SAAoBC,GAClBA,EAAEC,iBAGUC,OAAOlB,EAAKI,MAAMe,OAI9B,IAJA,IACMd,EAAOa,OAAOlB,EAAKK,KAAKc,OACxBb,EAASY,OAAOlB,EAAKM,OAAOa,OAEzBC,EAAI,EAAGA,EAAId,EAAQc,GAAK,EAAG,CAGhCb,EAAc,EAAG,MACpBc,MAAK,SAAAC,G,IAAGd,EAAQc,EAARd,SAAUJ,EAAKkB,EAALlB,MACjBmB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,OACpEuB,QAAMC,IAAI,uBAAwCF,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M,IAE3DyB,OAAM,SAAAP,G,IAAGd,EAAQc,EAARd,SAAUJ,EAAKkB,EAALlB,MAClBmB,EAAAzB,GAAS0B,OAAOM,QAAQ,sBAAuCJ,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,OACnEuB,QAAMC,IAAI,sBAAqCF,OAAflB,EAAS,QAAYkB,OAANtB,EAAM,M,IAE5CC,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst refs = {\n  form: document.querySelector('.form'),\n  delay: document.querySelector('input[name=\"delay\"]'),\n  step: document.querySelector('input[name=\"step\"]'),\n  amount: document.querySelector('input[name=\"amount\"]'),\n  \n}\n\n// console.log(refs.form,refs.delay,refs.step,refs.amount);\n\n\n\n\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n    const shouldResolve = Math.random() > 0.3;\n        if (shouldResolve) {\n          resolve({position, delay});\n          \n        } else {\n          reject({position, delay});\n          \n        }\n    }, delay)\n  })\n   \n}\n\n\nrefs.form.addEventListener('submit', submitForm);\n\n\nfunction submitForm(e) {\n  e.preventDefault();\n\n\n  let delay = Number(refs.delay.value);\n  const step = Number(refs.step.value);\n  const amount = Number(refs.amount.value);\n\n  for (let i = 0; i < amount; i += 1) {\n      let position = i\n\n      createPromise(2, 1500)\n  .then(({ position, delay }) => {\n    Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`)\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`)\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });\n      delay += step\n  }\n  \n}\n\n\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$refs","form","document","querySelector","delay","step","amount","$ce04d3a99e08e73b$var$createPromise","position","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","Number","value","i","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure"],"version":3,"file":"03-promises.3e4a40f8.js.map"}